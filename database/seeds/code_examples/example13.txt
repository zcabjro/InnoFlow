```java

  private static void usage() {
    System.out.println("");
    System.out.println("java no.priv.garshol.duke.genetic.Driver [options] <cfgfile>");
    System.out.println("");
    System.out.println("  --testfile=<file>      use a test file for evaluation");
    System.out.println("  --active               use active learning, even if there is a test file");
    System.out.println("  --generations=N        number of generations to run (100)");
    System.out.println("  --population=N         number of configurations in population (100)");
    System.out.println("  --questions=N          questions to ask per generation (10)");
    System.out.println("  --sparse               don't ask questions after every generation");
    System.out.println("  --output=<file>        file to write best configuration to");
    System.out.println("                         (a new export after every generation)");
    System.out.println("  --threads=N            number of threads to run");
    System.out.println("  --linkfile=<file>      write user's answers to this file");
    System.out.println("  --scientific           test active learning");
    System.out.println("  --mutation-rate=n      mutation rate (default: self-evolving)");
    System.out.println("  --recombination-rate=n recombination rate (default: self-evolving)");
    System.out.println("  --no-comparators       don't evolve comparators");
    System.out.println("  --original=N           keep N copies of the original configuration");
    System.out.println("  --incomplete-data      use test file for training, but assume it's incomplete");
    System.out.println("");
    System.out.println("Duke version " + Duke.getVersionString());
  }
```

write your comments here